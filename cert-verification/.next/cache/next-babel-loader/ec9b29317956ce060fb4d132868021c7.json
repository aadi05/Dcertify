{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/aditya/Documents/projects/final_year_project/cert-verification/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport DigitalCertificationInstance from '../instances/DigitalCertificationInstance';\nimport { Statistic, Form, Button, Input, Message, Icon, Table } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\n\nconst SHA256 = require(\"crypto-js/sha256\");\n\nconst MerkleTools = require('merkle-tools');\n\nimport web3 from '../instances/web3';\nconst statisticStyle = {\n  margin: \"25px 25px 25px 25px\"\n};\nconst formStyle = {\n  fontSize: \"25px\"\n};\n\nclass Dcertify extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      candidateID: \"\",\n      verificationStatus: false,\n      tableStatus: false,\n      buttonStatus: true,\n      messageHeader: \"Verification Failed\",\n      messageContent: \"Certificate doesn't exist!\",\n      messageColor: \"red\",\n      fullName: \"\",\n      degreeName: \"\",\n      courseName: \"\",\n      collegeName: \"\",\n      classCategory: \"\",\n      organizationName: \"\",\n      dob: \"\",\n      issueDate: \"\",\n      buttonText: \"View Certificate\",\n      certificateStatus: false,\n      buttonTwoText: \"View raw data\",\n      certData: \"\",\n      merkleRoot: \"\",\n      merkleProof: []\n    });\n\n    _defineProperty(this, \"onSubmitVerify\", async event => {\n      event.preventDefault();\n      const certificateHash = SHA256(this.state.certData).toString();\n      console.log(certificateHash);\n      console.log(this.state.certData);\n      const merkleTools = new MerkleTools();\n      const isValid = merkleTools.validateProof(this.state.merkleProof, certificateHash, this.state.merkleRoot);\n      console.log(isValid);\n      console.log(isValid);\n\n      if (!isValid) {\n        this.setState({\n          messageHeader: \"Verification Failed\",\n          verificationStatus: true,\n          buttonStatus: true,\n          messageContent: \"Certificate doesn't exist!\",\n          messageColor: \"red\",\n          tableStatus: false,\n          certificateStatus: false\n        });\n        return;\n      }\n\n      console.log(\"separator______\");\n      this.setState({\n        tableStatus: false,\n        certificateStatus: false,\n        buttonText: \"View Certificate\",\n        buttonTwoText: \"View raw data\"\n      });\n\n      try {\n        const revokeStatus = await DigitalCertificationInstance.methods.checkRevokeStatus(certificateHash).call();\n        console.log(revokeStatus);\n\n        if (!revokeStatus) {\n          try {\n            const merkleStatus = await DigitalCertificationInstance.methods.checkMerkleRoot(this.state.merkleRoot).call();\n            console.log(\"merkleStatus\" + merkleStatus);\n\n            if (merkleStatus) {\n              this.setState({\n                messageHeader: \"Verification Status\",\n                verificationStatus: true,\n                buttonStatus: false,\n                messageContent: \"Certificate verified successfully!\",\n                messageColor: \"green\"\n              });\n              return;\n            }\n          } catch (err) {\n            this.setState({\n              messageHeader: \"Verification Failed\",\n              verificationStatus: true,\n              buttonStatus: true,\n              messageContent: \"Try again later!\",\n              messageColor: \"red\",\n              tableStatus: false,\n              certificateStatus: false\n            });\n            return;\n          }\n        }\n\n        this.setState({\n          messageHeader: \"Verification Failed\",\n          verificationStatus: true,\n          buttonStatus: true,\n          messageContent: \"This certificate is revoked. Please contact concerned authorities for more information\",\n          messageColor: \"red\",\n          tableStatus: false,\n          certificateStatus: false\n        });\n        return;\n      } catch (err) {\n        console.log(err);\n        this.setState({\n          messageHeader: \"Verification Failed\",\n          verificationStatus: true,\n          buttonStatus: true,\n          messageContent: \"Try again later!\",\n          messageColor: \"red\",\n          tableStatus: false,\n          certificateStatus: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"setValues\", obj => {\n      const data = obj.CertificateData;\n      const issueD = this.convertDate(obj.Metadata.datetime);\n\n      const cert = _JSON$stringify(data);\n\n      this.setState({\n        candidateID: data.ID,\n        degreeName: data.Degree,\n        fullName: data.Name,\n        courseName: data.Course,\n        organizationName: data.Organization,\n        dob: data.DOB,\n        classCategory: data.ClassCategory,\n        collegeName: data.College,\n        issueDate: issueD,\n        merkleProof: obj.MerkleProof,\n        merkleRoot: obj.MerkleRoot,\n        certData: cert\n      });\n      console.log(this.state);\n    });\n\n    _defineProperty(this, \"handleFile\", selectorFiles => {\n      const reader = new FileReader();\n      reader.onload = this.onReaderLoad;\n      reader.readAsText(selectorFiles[0]);\n    });\n\n    _defineProperty(this, \"onReaderLoad\", event => {\n      var obj = JSON.parse(event.target.result);\n      this.setValues(obj);\n    });\n\n    _defineProperty(this, \"showHideRawData\", () => {\n      if (this.state.tableStatus == true) {\n        this.setState({\n          tableStatus: false,\n          certificateStatus: false,\n          buttonTwoText: \"View raw data\"\n        });\n      } else {\n        this.setState({\n          tableStatus: true,\n          certificateStatus: false,\n          buttonTwoText: \"Hide raw data\",\n          buttonText: \"View Certificate\"\n        });\n      }\n    });\n\n    _defineProperty(this, \"showHideCertificate\", () => {\n      if (this.state.certificateStatus == true) {\n        this.setState({\n          certificateStatus: false,\n          tableStatus: false,\n          buttonText: \"View Certificate\"\n        });\n      } else {\n        this.setState({\n          certificateStatus: true,\n          tableStatus: false,\n          buttonText: \"Hide Certificate\",\n          buttonTwoText: \"View raw data\"\n        });\n      }\n    });\n\n    _defineProperty(this, \"convertDate\", inpTime => {\n      const months_arr = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n      const date = new Date(inpTime * 1000);\n      const year = date.getFullYear();\n      const month = months_arr[date.getMonth()];\n      const day = date.getDate();\n      return month + \" \" + day + \",\" + year;\n    });\n  }\n\n  static async getInitialProps() {\n    const manager = await DigitalCertificationInstance.methods.manager().call();\n    const totalCertificates = await DigitalCertificationInstance.methods.totalCertificatesIssued().call();\n    return {\n      manager: manager,\n      totalCertificates: totalCertificates\n    };\n  }\n\n  statisticComponent() {\n    const stat = __jsx(Statistic, {\n      floated: \"right\",\n      style: statisticStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, __jsx(Statistic.Value, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.props.totalCertificates), __jsx(\"div\", {\n      className: \"label\",\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Certificates Issued So Far\"));\n\n    return stat;\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.statisticComponent(), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), __jsx(Form, {\n      onSubmit: this.onSubmitVerify,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, __jsx(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        fontSize: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Verify Certificate\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), __jsx(Input, {\n      type: \"file\",\n      labelPosition: \"right\",\n      style: formStyle,\n      onChange: event => this.handleFile(event.target.files),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), __jsx(Button, {\n      type: \"submit\",\n      fluid: true,\n      primary: true,\n      style: {\n        fontSize: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Verify\"), __jsx(Message, {\n      floating: true,\n      color: this.state.messageColor,\n      hidden: !this.state.verificationStatus,\n      header: this.state.messageHeader,\n      content: this.state.messageContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), __jsx(Button, {\n      hidden: this.state.buttonStatus,\n      onClick: this.showHideCertificate,\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.state.buttonText), __jsx(Button, {\n      style: {\n        marginLeft: \"15px\"\n      },\n      hidden: this.state.buttonStatus,\n      onClick: this.showHideRawData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.state.buttonTwoText), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      hidden: !this.state.certificateStatus,\n      style: {\n        margin: \"auto\",\n        width: \"800px\",\n        height: \"600px\",\n        padding: \"20px\",\n        textAlign: \"center\",\n        border: \"10px solid #787878\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        width: \"750px\",\n        height: \"550px\",\n        padding: \"20px\",\n        textAlign: \"center\",\n        border: \"5px solid #787878\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, __jsx(Icon, {\n      name: \"certificate\",\n      color: \"yellow\",\n      size: \"huge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      style: {\n        fonSize: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Certificate of Completion\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      style: {\n        fontSize: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"This is to certify that\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      style: {\n        fontSize: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.state.fullName)), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      style: {\n        fontSize: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"has completed the course\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      style: {\n        fontSize: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.state.degreeName, \" in \", this.state.courseName), \" \", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      style: {\n        fontSize: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"with \", __jsx(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.classCategory, \" class\")), \" \", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      style: {\n        fontSize: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"dated\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      style: {\n        fontSize: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, this.convertDate(this.state.issueDate)))), __jsx(Table, {\n      hidden: !this.state.tableStatus,\n      color: \"green\",\n      key: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, __jsx(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, __jsx(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, __jsx(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Name\"), __jsx(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, this.state.fullName))), __jsx(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, __jsx(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, __jsx(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Degree\"), __jsx(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, this.state.degreeName)), __jsx(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, __jsx(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Course Name\"), __jsx(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, this.state.courseName)), __jsx(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, __jsx(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Class\"), __jsx(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.state.classCategory)), __jsx(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, __jsx(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"College\"), __jsx(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, this.state.collegeName)), __jsx(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, __jsx(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Organization\"), __jsx(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, this.state.organizationName)), __jsx(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, __jsx(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Date of Birth\"), __jsx(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.convertDate(this.state.dob))), __jsx(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, __jsx(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Issue Date\"), __jsx(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, this.convertDate(this.state.issueDate))))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Dcertify;","map":{"version":3,"sources":["/home/aditya/Documents/projects/final_year_project/cert-verification/pages/index.js"],"names":["React","Component","DigitalCertificationInstance","Statistic","Form","Button","Input","Message","Icon","Table","Layout","SHA256","require","MerkleTools","web3","statisticStyle","margin","formStyle","fontSize","Dcertify","candidateID","verificationStatus","tableStatus","buttonStatus","messageHeader","messageContent","messageColor","fullName","degreeName","courseName","collegeName","classCategory","organizationName","dob","issueDate","buttonText","certificateStatus","buttonTwoText","certData","merkleRoot","merkleProof","event","preventDefault","certificateHash","state","toString","console","log","merkleTools","isValid","validateProof","setState","revokeStatus","methods","checkRevokeStatus","call","merkleStatus","checkMerkleRoot","err","obj","data","CertificateData","issueD","convertDate","Metadata","datetime","cert","ID","Degree","Name","Course","Organization","DOB","ClassCategory","College","MerkleProof","MerkleRoot","selectorFiles","reader","FileReader","onload","onReaderLoad","readAsText","JSON","parse","target","result","setValues","inpTime","months_arr","date","Date","year","getFullYear","month","getMonth","day","getDate","getInitialProps","manager","totalCertificates","totalCertificatesIssued","statisticComponent","stat","props","marginTop","render","onSubmitVerify","handleFile","files","showHideCertificate","marginLeft","showHideRawData","width","height","padding","textAlign","border","fonSize"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport DigitalCertificationInstance from '../instances/DigitalCertificationInstance';\nimport { Statistic, Form, Button, Input, Message, Icon, Table} from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nconst SHA256 = require(\"crypto-js/sha256\");\nconst MerkleTools = require('merkle-tools');\nimport web3 from '../instances/web3';\n\nconst statisticStyle = {\n    margin:\"25px 25px 25px 25px\"\n};\n\nconst formStyle = {\n    fontSize:\"25px\"\n}\n\nclass Dcertify extends Component{\n\n    state = {\n        candidateID : \"\",\n        verificationStatus:false,\n        tableStatus:false,\n        buttonStatus:true,\n        messageHeader:\"Verification Failed\",\n        messageContent:\"Certificate doesn't exist!\",\n        messageColor:\"red\",\n        fullName:\"\",\n        degreeName:\"\",\n        courseName:\"\",\n        collegeName:\"\",\n        classCategory:\"\",\n        organizationName:\"\",\n        dob:\"\",\n        issueDate:\"\",\n        buttonText:\"View Certificate\",\n        certificateStatus:false,\n        buttonTwoText:\"View raw data\",\n        certData:\"\",\n        merkleRoot:\"\",\n        merkleProof: []\n\n    };\n\n    static async getInitialProps(){\n        const manager = await DigitalCertificationInstance.methods.manager().call();\n        const totalCertificates = await DigitalCertificationInstance.methods.totalCertificatesIssued().call();\n\n        return {manager:manager,totalCertificates:totalCertificates};\n    }\n    onSubmitVerify = async (event) => {\n        event.preventDefault();\n\n        const certificateHash = SHA256(this.state.certData).toString();\n        console.log(certificateHash);\n        console.log(this.state.certData);\n        const merkleTools = new MerkleTools();\n        const isValid = merkleTools.validateProof(this.state.merkleProof,certificateHash,this.state.merkleRoot);\n        console.log(isValid);\n        console.log(isValid);\n        if(!isValid){\n            this.setState({messageHeader:\"Verification Failed\",verificationStatus:true,buttonStatus:true,\n                        messageContent:\"Certificate doesn't exist!\",messageColor:\"red\",tableStatus:false,certificateStatus:false});\n            return;\n        }\n\n        console.log(\"separator______\");\n\n        this.setState({tableStatus:false,certificateStatus:false,buttonText:\"View Certificate\",buttonTwoText:\"View raw data\"});\n\n        try{\n            const revokeStatus = await DigitalCertificationInstance.methods.checkRevokeStatus(certificateHash).call();\n            console.log(revokeStatus);\n            if(!revokeStatus){\n                try{\n                    const merkleStatus = await DigitalCertificationInstance.methods.checkMerkleRoot(this.state.merkleRoot).call();\n                    console.log(\"merkleStatus\"+merkleStatus);\n                    if(merkleStatus){\n                        this.setState({messageHeader:\"Verification Status\",verificationStatus:true,buttonStatus:false,\n                            messageContent:\"Certificate verified successfully!\",messageColor:\"green\"});\n                        return;\n                    }\n                }\n                catch(err){\n                    this.setState({messageHeader:\"Verification Failed\",verificationStatus:true,buttonStatus:true,\n                        messageContent:\"Try again later!\",messageColor:\"red\",tableStatus:false,certificateStatus:false});\n                    return;\n                }\n            }\n            this.setState({messageHeader:\"Verification Failed\",verificationStatus:true,buttonStatus:true,\n                        messageContent:\"This certificate is revoked. Please contact concerned authorities for more information\",messageColor:\"red\",tableStatus:false,certificateStatus:false});\n            return;\n        }\n        catch(err){\n            console.log(err);\n            this.setState({messageHeader:\"Verification Failed\",verificationStatus:true,buttonStatus:true,\n                        messageContent:\"Try again later!\",messageColor:\"red\",tableStatus:false,certificateStatus:false});\n        }\n\n\n    };\n\n    setValues = (obj) => {\n        const data = obj.CertificateData;\n        const issueD = this.convertDate(obj.Metadata.datetime)\n        const cert = JSON.stringify(data);\n        this.setState({candidateID:data.ID,degreeName:data.Degree,fullName:data.Name,courseName:data.Course,organizationName:data.Organization,\n            dob:data.DOB,classCategory:data.ClassCategory,collegeName:data.College,issueDate:issueD,merkleProof:obj.MerkleProof,merkleRoot:obj.MerkleRoot,certData:cert});\n        console.log(this.state);\n\n    }\n\n    handleFile = (selectorFiles) => {\n        const reader = new FileReader();\n        reader.onload = this.onReaderLoad;\n        reader.readAsText(selectorFiles[0]);\n    }\n\n    onReaderLoad = (event) => {\n        var obj = JSON.parse(event.target.result);\n        this.setValues(obj);\n        \n    }\n\n    showHideRawData = () => {\n        if(this.state.tableStatus == true){\n            this.setState({tableStatus:false,certificateStatus:false,buttonTwoText:\"View raw data\"});\n        }\n        else{\n            this.setState({tableStatus:true,certificateStatus:false,buttonTwoText:\"Hide raw data\",buttonText:\"View Certificate\"});\n        }\n\n    }\n\n    showHideCertificate = () => {\n        if(this.state.certificateStatus == true){\n            this.setState({certificateStatus:false,tableStatus:false,buttonText:\"View Certificate\"});\n        }\n        else{\n            this.setState({certificateStatus:true,tableStatus:false,buttonText:\"Hide Certificate\",buttonTwoText:\"View raw data\"});\n        }\n\n    }\n\n    convertDate = (inpTime) => {\n        const months_arr = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n        const date = new Date(inpTime*1000);\n        const year = date.getFullYear();\n        const month = months_arr[date.getMonth()];\n        const day = date.getDate();\n\n        return (month+\" \"+day+\",\"+year);\n    }\n\n    statisticComponent(){\n        const stat = <Statistic floated=\"right\" style={statisticStyle}>\n                        <Statistic.Value>{this.props.totalCertificates}</Statistic.Value>\n                        <div className=\"label\" style={{marginTop:\"10px\"}}>Certificates Issued So Far</div>\n                    </Statistic>\n        return stat;\n    }\n\n    render(){\n        return  (<Layout>\n                {this.statisticComponent()}<br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br>\n                <Form onSubmit={this.onSubmitVerify}>\n                    <Form.Field>\n                    <label style={{fontSize:\"20px\"}}>Verify Certificate</label><br></br>\n                    <Input type=\"file\" labelPosition=\"right\" style={formStyle}\n                     onChange={event =>this.handleFile(event.target.files)} />\n                    </Form.Field>\n                    <Button type='submit' fluid primary style={{fontSize:\"20px\"}}>Verify</Button>\n                    <Message floating color={this.state.messageColor} hidden={!this.state.verificationStatus} header={this.state.messageHeader} content={this.state.messageContent}></Message>\n                </Form>\n                <br></br><br></br>\n                <Button hidden={this.state.buttonStatus} onClick={this.showHideCertificate} primary>{this.state.buttonText}</Button>\n                <Button style={{marginLeft:\"15px\"}} hidden={this.state.buttonStatus} onClick={this.showHideRawData}>{this.state.buttonTwoText}</Button>\n                <br></br><br></br>\n                <div hidden={!this.state.certificateStatus} style={{margin:\"auto\", width:\"800px\",height:\"600px\",padding:\"20px\",textAlign:\"center\", border:\"10px solid #787878\"}}>\n                <div style={{width:\"750px\", height:\"550px\", padding:\"20px\", textAlign:\"center\", border: \"5px solid #787878\"}}>\n                    <Icon name=\"certificate\" color='yellow' size=\"huge\"/><br></br><h1 style={{fonSize:\"50px\"}}><b>Certificate of Completion</b></h1>\n                    <br></br>\n                    <span style={{fontSize:\"25px\"}}><i>This is to certify that</i></span><br></br>\n                    <br></br>\n                    <span style={{fontSize:\"25px\"}}><b>{this.state.fullName}</b></span><br></br><br></br>\n                    <span style={{fontSize:\"25px\"}}><i>has completed the course</i></span><br></br><br></br>\n                    <span style={{fontSize:\"30px\"}}>{this.state.degreeName} in {this.state.courseName}</span> <br></br>\n                    <span style={{fontSize:\"20px\"}}>with <b>{this.state.classCategory} class</b></span> <br></br><br></br>\n                    <span style={{fontSize:\"25px\"}}><i>dated</i></span><br></br>\n                    <span style={{fontSize:\"30px\"}}>{this.convertDate(this.state.issueDate)}</span>\n                </div>\n                </div>\n                <Table hidden={!this.state.tableStatus} color=\"green\" key=\"blue\">\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Name</Table.HeaderCell>\n                            <Table.HeaderCell>{this.state.fullName}</Table.HeaderCell>\n                        </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                        <Table.Row>\n                            <Table.Cell>Degree</Table.Cell>\n                            <Table.Cell>{this.state.degreeName}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>Course Name</Table.Cell>\n                            <Table.Cell>{this.state.courseName}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>Class</Table.Cell>\n                            <Table.Cell>{this.state.classCategory}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>College</Table.Cell>\n                            <Table.Cell>{this.state.collegeName}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>Organization</Table.Cell>\n                            <Table.Cell>{this.state.organizationName}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>Date of Birth</Table.Cell>\n                            <Table.Cell>{this.convertDate(this.state.dob)}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>Issue Date</Table.Cell>\n                            <Table.Cell>{this.convertDate(this.state.issueDate)}</Table.Cell>\n                        </Table.Row>\n\n                    </Table.Body>\n                </Table>\n                <br></br><br></br><br></br><br></br>\n                </Layout>\n                );\n    }\n\n}\n\nexport default Dcertify;"]},"metadata":{},"sourceType":"module"}