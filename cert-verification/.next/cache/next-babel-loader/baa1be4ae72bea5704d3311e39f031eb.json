{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/aditya/Documents/projects/final_year_project/cert-verification/pages/admin.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport DigitalCertificationInstance from '../instances/DigitalCertificationInstance';\nimport { Container, Form, Button, Input, Segment, Checkbox, Message } from 'semantic-ui-react';\nimport Head from 'next/head';\nimport { Tab } from 'semantic-ui-react';\nimport AdminHeader from '../components/AdminHeader';\nimport web3 from '../instances/web3';\n\nvar SHA256 = require(\"crypto-js/sha256\");\n\nimport swal from \"sweetalert\";\n\nvar Admin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Admin, _Component);\n\n  function Admin() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Admin)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      merkleRoot: \"\",\n      creationStatus: false,\n      certificateHash: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmitDeploy\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var resultArray, mRoot, batchCount, accounts, merkleStatus;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                resultArray = _this.state.merkleRoot.split(\"/\");\n                mRoot = resultArray[0];\n                batchCount = _parseInt(resultArray[1]);\n                _context.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                accounts = _context.sent;\n                _context.prev = 7;\n                _context.next = 10;\n                return DigitalCertificationInstance.methods.checkMerkleRoot(mRoot).call();\n\n              case 10:\n                merkleStatus = _context.sent;\n\n                if (!merkleStatus) {\n                  _context.next = 14;\n                  break;\n                }\n\n                swal(\"Merkle Root already exists\", mRoot, \"warning\");\n                return _context.abrupt(\"return\");\n\n              case 14:\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](7);\n                console.log(_context.t0);\n\n              case 19:\n                _context.prev = 19;\n                _context.next = 22;\n                return DigitalCertificationInstance.methods.storeMerkleRoot(mRoot, batchCount).send({\n                  gas: \"1000000\",\n                  from: accounts[0]\n                });\n\n              case 22:\n                _context.next = 27;\n                break;\n\n              case 24:\n                _context.prev = 24;\n                _context.t1 = _context[\"catch\"](19);\n                console.log(_context.t1);\n\n              case 27:\n                _this.setState({\n                  creationStatus: true\n                });\n\n                swal(\"Merkle Root Deployed\", mRoot, \"success\");\n\n              case 29:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[7, 16], [19, 24]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"setValues\", function (obj) {\n      var data = obj.CertificateData;\n\n      var cert = _JSON$stringify(data);\n\n      var certiHash = SHA256(cert).toString();\n\n      _this.setState({\n        merkleRoot: obj.MerkleRoot,\n        certificateHash: certiHash\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFile\", function (selectorFiles) {\n      var reader = new FileReader();\n      reader.onload = _this.onReaderLoad;\n      reader.readAsText(selectorFiles[0]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onReaderLoad\", function (event) {\n      var obj = JSON.parse(event.target.result);\n\n      _this.setValues(obj);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmitRevoke\",\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault();\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                swal({\n                  title: \"Are you sure?\",\n                  text: \"Once revoked, the certificate will be permanently removed!\",\n                  icon: \"warning\",\n                  buttons: true,\n                  dangerMode: true\n                }).then(\n                /*#__PURE__*/\n                function () {\n                  var _ref3 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee2(willDelete) {\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!willDelete) {\n                              _context2.next = 13;\n                              break;\n                            }\n\n                            swal(\"Certificate succesfully revoked!\", {\n                              icon: \"success\"\n                            });\n                            _context2.prev = 2;\n                            _context2.next = 5;\n                            return DigitalCertificationInstance.methods.revokeCertificate(_this.state.certificateHash).send({\n                              gas: \"1000000\",\n                              from: accounts[0]\n                            });\n\n                          case 5:\n                            console.log(\"Revoked!\");\n                            _context2.next = 11;\n                            break;\n\n                          case 8:\n                            _context2.prev = 8;\n                            _context2.t0 = _context2[\"catch\"](2);\n                            console.log(\"revoke unsuccessfull\");\n\n                          case 11:\n                            _context2.next = 14;\n                            break;\n\n                          case 13:\n                            swal(\"Certificate is safe!\");\n\n                          case 14:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2, null, [[2, 8]]);\n                  }));\n\n                  return function (_x3) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"generateJSX\", __jsx(Segment, {\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(Form, {\n      onSubmit: _this.onSubmitDeploy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(Form.Field, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Merkle Root\"), __jsx(\"input\", {\n      placeholder: \"Merkle Root\",\n      onChange: function onChange(event) {\n        return _this.setState({\n          merkleRoot: event.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), __jsx(Button, {\n      loading: _this.state.loading,\n      fluid: true,\n      primary: true,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Deploy\"))));\n\n    _defineProperty(_assertThisInitialized(_this), \"revokeJSX\", __jsx(Form, {\n      style: {\n        marginTop: \"10px\"\n      },\n      onSubmit: _this.onSubmitRevoke,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, __jsx(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Revoking certificate will permanently remove the copy of certificate.\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), __jsx(Input, {\n      type: \"file\",\n      labelPosition: \"right\",\n      style: {\n        color: \"red\"\n      },\n      onChange: function onChange(event) {\n        return _this.handleFile(event.target.files);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), __jsx(Button, {\n      type: \"submit\",\n      fluid: true,\n      style: {\n        background: \"red\",\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Revoke\")));\n\n    _defineProperty(_assertThisInitialized(_this), \"panes\", [{\n      menuItem: 'Deploy Merkle root',\n      render: function render() {\n        return __jsx(Tab.Pane, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, _this.generateJSX);\n      }\n    }, {\n      menuItem: 'Revoke Certificate',\n      render: function render() {\n        return __jsx(Tab.Pane, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, _this.revokeJSX);\n      }\n    }, {\n      menuItem: 'Create Account',\n      render: function render() {\n        return __jsx(Tab.Pane, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Unimplemented\");\n      }\n    }]);\n\n    return _this;\n  }\n\n  _createClass(Admin, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, __jsx(AdminHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), __jsx(\"style\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, 'body { background-color: \"white\"; }')), __jsx(Tab, {\n        panes: this.panes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Admin;\n}(Component);\n\nexport default Admin;","map":{"version":3,"sources":["/home/aditya/Documents/projects/final_year_project/cert-verification/pages/admin.js"],"names":["React","Component","DigitalCertificationInstance","Container","Form","Button","Input","Segment","Checkbox","Message","Head","Tab","AdminHeader","web3","SHA256","require","swal","Admin","merkleRoot","creationStatus","certificateHash","event","preventDefault","resultArray","state","split","mRoot","batchCount","eth","getAccounts","accounts","methods","checkMerkleRoot","call","merkleStatus","console","log","storeMerkleRoot","send","gas","from","setState","obj","data","CertificateData","cert","certiHash","toString","MerkleRoot","selectorFiles","reader","FileReader","onload","onReaderLoad","readAsText","JSON","parse","target","result","setValues","title","text","icon","buttons","dangerMode","then","willDelete","revokeCertificate","background","onSubmitDeploy","value","loading","marginTop","onSubmitRevoke","fontSize","color","handleFile","files","menuItem","render","generateJSX","revokeJSX","panes"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport DigitalCertificationInstance from '../instances/DigitalCertificationInstance';\nimport {Container, Form, Button, Input, Segment, Checkbox, Message} from 'semantic-ui-react';\nimport Head from 'next/head';\nimport { Tab } from 'semantic-ui-react';\nimport AdminHeader from '../components/AdminHeader';\nimport web3 from '../instances/web3';\nconst SHA256 = require(\"crypto-js/sha256\");\nimport swal from \"sweetalert\";\n\nclass Admin extends Component{\n\n    state={\n        merkleRoot:\"\",\n        creationStatus:false,\n        certificateHash:\"\"\n    };\n\n    onSubmitDeploy = async (event) => {\n        event.preventDefault();\n        const resultArray = this.state.merkleRoot.split(\"/\");\n        const mRoot = resultArray[0];\n        const batchCount = parseInt(resultArray[1]);\n\n        const accounts = await web3.eth.getAccounts();\n        try{\n          const merkleStatus = await DigitalCertificationInstance.methods.checkMerkleRoot(mRoot).call();\n          if(merkleStatus){\n            swal(\"Merkle Root already exists\",mRoot,\"warning\");\n            return;\n          }\n        }\n        catch(err){\n          console.log(err);\n        }\n\n        try{\n            await DigitalCertificationInstance.methods.storeMerkleRoot(mRoot,batchCount).send({gas:\"1000000\",from:accounts[0]});\n        }\n        catch(err){\n            console.log(err)\n        }\n        this.setState({creationStatus:true});\n\n        swal(\"Merkle Root Deployed\", mRoot, \"success\");\n\n    };\n\n    setValues = (obj) => {\n      const data = obj.CertificateData;\n      const cert = JSON.stringify(data);\n      const certiHash = SHA256(cert).toString();\n      this.setState({merkleRoot:obj.MerkleRoot,certificateHash:certiHash});\n\n    }\n\n    handleFile = (selectorFiles) => {\n        const reader = new FileReader();\n        reader.onload = this.onReaderLoad;\n        reader.readAsText(selectorFiles[0]);\n    }\n\n    onReaderLoad = (event) => {\n        var obj = JSON.parse(event.target.result);\n        this.setValues(obj);\n        \n    }\n\n    onSubmitRevoke = async (event) => {\n        event.preventDefault();\n\n        const accounts = await web3.eth.getAccounts(); \n\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once revoked, the certificate will be permanently removed!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then(async (willDelete) => {\n            if (willDelete) {\n              swal(\"Certificate succesfully revoked!\", {\n                icon: \"success\",\n              });\n              try{\n                await DigitalCertificationInstance.methods.revokeCertificate(this.state.certificateHash).send({\n                    gas:\"1000000\",from:accounts[0]\n                });\n                console.log(\"Revoked!\");\n                }\n                catch(err){\n                    console.log(\"revoke unsuccessfull\");\n                }\n            } else {\n              swal(\"Certificate is safe!\");\n            }\n          });\n        \n    }\n\n    generateJSX = (<Segment style={{background:\"white\"}}>\n                        <Form onSubmit={this.onSubmitDeploy}>\n                            <Form.Field required>\n                            <label>Merkle Root</label>\n                            <input placeholder='Merkle Root'\n                            onChange={event => this.setState({merkleRoot: event.target.value})} />\n                            </Form.Field>\n                            <Button loading={this.state.loading} fluid primary type=\"submit\">Deploy</Button>\n                        </Form>\n                    </Segment>);\n\n    revokeJSX = (<Form style={{marginTop:\"10px\"}} onSubmit={this.onSubmitRevoke}>\n                    <Form.Field>\n                    <label style={{fontSize:\"15px\"}}>Revoking certificate will permanently remove the copy of certificate.</label><br></br>\n                    <Input type=\"file\" labelPosition=\"right\" style={{color:\"red\"}}\n                    onChange={event =>this.handleFile(event.target.files)} />\n                    </Form.Field>\n                    <Button type='submit' fluid style={{background:\"red\",color:\"white\"}}>Revoke</Button>\n                  </Form>);\n\n    panes = [\n        { menuItem: 'Deploy Merkle root', render: () => <Tab.Pane>{this.generateJSX}</Tab.Pane> },\n        { menuItem: 'Revoke Certificate', render: () => <Tab.Pane>{this.revokeJSX}</Tab.Pane> },\n        { menuItem: 'Create Account', render: () => <Tab.Pane>Unimplemented</Tab.Pane> },\n      ]\n\n    render(){\n        return  (<div>\n                <AdminHeader/>\n                <Container>\n                <Head>\n                    <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\n                    <style>{'body { background-color: \"white\"; }'}</style>\n                </Head>\n                <Tab panes={this.panes}/>\n                </Container>\n                </div>\n                );\n    }\n\n}\n\nexport default Admin;"]},"metadata":{},"sourceType":"module"}